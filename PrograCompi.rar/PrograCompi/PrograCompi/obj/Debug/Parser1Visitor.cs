//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\laure\Desktop\PROYECTO 2 COMPILADORES\Version Agro\PrograCompi.rar\PrograCompi\PrograCompi\Parser, Lexer\Parser1.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PrograCompi {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="Parser1"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IParser1Visitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>classDeclAST</c>
	/// labeled alternative in <see cref="Parser1.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclAST([NotNull] Parser1.ClassDeclASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>varDeclaAuxAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclaAuxAST([NotNull] Parser1.VarDeclaAuxASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>constDeclaAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstDeclaAST([NotNull] Parser1.ConstDeclaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>classDeclaAuxAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaAuxAST([NotNull] Parser1.ClassDeclaAuxASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddopAST([NotNull] Parser1.AddopASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>condTermAST</c>
	/// labeled alternative in <see cref="Parser1.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondTermAST([NotNull] Parser1.CondTermASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>constDeclCharAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstDeclCharAST([NotNull] Parser1.ConstDeclCharASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>constDeclNumAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstDeclNumAST([NotNull] Parser1.ConstDeclNumASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>programAST</c>
	/// labeled alternative in <see cref="Parser1.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramAST([NotNull] Parser1.ProgramASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>methodDeclAST</c>
	/// labeled alternative in <see cref="Parser1.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclAST([NotNull] Parser1.MethodDeclASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>desig2AST</c>
	/// labeled alternative in <see cref="Parser1.desig2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesig2AST([NotNull] Parser1.Desig2ASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeAST</c>
	/// labeled alternative in <see cref="Parser1.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeAST([NotNull] Parser1.TypeASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>relopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelopAST([NotNull] Parser1.RelopASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>formParsAST</c>
	/// labeled alternative in <see cref="Parser1.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormParsAST([NotNull] Parser1.FormParsASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>actParsAST</c>
	/// labeled alternative in <see cref="Parser1.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActParsAST([NotNull] Parser1.ActParsASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>designatorAST</c>
	/// labeled alternative in <see cref="Parser1.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignatorAST([NotNull] Parser1.DesignatorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>condFactAST</c>
	/// labeled alternative in <see cref="Parser1.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondFactAST([NotNull] Parser1.CondFactASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>conditionAST</c>
	/// labeled alternative in <see cref="Parser1.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionAST([NotNull] Parser1.ConditionASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>mulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulopAST([NotNull] Parser1.MulopASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>forstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForstaAST([NotNull] Parser1.ForstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>designatorstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignatorstaAST([NotNull] Parser1.DesignatorstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>whilestaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhilestaAST([NotNull] Parser1.WhilestaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>returnstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnstaAST([NotNull] Parser1.ReturnstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>pycomastaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPycomastaAST([NotNull] Parser1.PycomastaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>foreachstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachstaAST([NotNull] Parser1.ForeachstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>breakAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakAST([NotNull] Parser1.BreakASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>readstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadstaAST([NotNull] Parser1.ReadstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ifstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfstaAST([NotNull] Parser1.IfstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>writestaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWritestaAST([NotNull] Parser1.WritestaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>blockstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockstaAST([NotNull] Parser1.BlockstaASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>blockAST</c>
	/// labeled alternative in <see cref="Parser1.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockAST([NotNull] Parser1.BlockASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>exprAST</c>
	/// labeled alternative in <see cref="Parser1.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprAST([NotNull] Parser1.ExprASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>termAST</c>
	/// labeled alternative in <see cref="Parser1.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermAST([NotNull] Parser1.TermASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>truefalseFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTruefalseFactorAST([NotNull] Parser1.TruefalseFactorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringAST([NotNull] Parser1.StringASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>designatorfactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignatorfactorAST([NotNull] Parser1.DesignatorfactorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>numFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumFactorAST([NotNull] Parser1.NumFactorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>newidFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewidFactorAST([NotNull] Parser1.NewidFactorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>charconstFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharconstFactorAST([NotNull] Parser1.CharconstFactorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>pizqExpreFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPizqExpreFactorAST([NotNull] Parser1.PizqExpreFactorASTContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>varDeclAST</c>
	/// labeled alternative in <see cref="Parser1.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclAST([NotNull] Parser1.VarDeclASTContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] Parser1.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecla([NotNull] Parser1.DeclaContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstDecl([NotNull] Parser1.ConstDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDecl([NotNull] Parser1.VarDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDecl([NotNull] Parser1.ClassDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDecl([NotNull] Parser1.MethodDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormPars([NotNull] Parser1.FormParsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] Parser1.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] Parser1.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] Parser1.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActPars([NotNull] Parser1.ActParsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] Parser1.ConditionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondTerm([NotNull] Parser1.CondTermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondFact([NotNull] Parser1.CondFactContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] Parser1.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] Parser1.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] Parser1.FactorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignator([NotNull] Parser1.DesignatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.desig2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesig2([NotNull] Parser1.Desig2Context context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelop([NotNull] Parser1.RelopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddop([NotNull] Parser1.AddopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Parser1.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulop([NotNull] Parser1.MulopContext context);
}
} // namespace PrograCompi
