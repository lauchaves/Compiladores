//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\laure\Desktop\PROYECTO 2 COMPILADORES\Version Agro\PrograCompi.rar\PrograCompi\PrograCompi\Parser, Lexer\Parser1.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PrograCompi {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="Parser1"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IParser1Listener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>classDeclAST</c>
	/// labeled alternative in <see cref="Parser1.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclAST([NotNull] Parser1.ClassDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>classDeclAST</c>
	/// labeled alternative in <see cref="Parser1.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclAST([NotNull] Parser1.ClassDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>varDeclaAuxAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclaAuxAST([NotNull] Parser1.VarDeclaAuxASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varDeclaAuxAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclaAuxAST([NotNull] Parser1.VarDeclaAuxASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>constDeclaAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstDeclaAST([NotNull] Parser1.ConstDeclaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constDeclaAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstDeclaAST([NotNull] Parser1.ConstDeclaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>classDeclaAuxAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclaAuxAST([NotNull] Parser1.ClassDeclaAuxASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>classDeclaAuxAST</c>
	/// labeled alternative in <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclaAuxAST([NotNull] Parser1.ClassDeclaAuxASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>addopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddopAST([NotNull] Parser1.AddopASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddopAST([NotNull] Parser1.AddopASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>condTermAST</c>
	/// labeled alternative in <see cref="Parser1.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondTermAST([NotNull] Parser1.CondTermASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condTermAST</c>
	/// labeled alternative in <see cref="Parser1.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondTermAST([NotNull] Parser1.CondTermASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>constDeclCharAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstDeclCharAST([NotNull] Parser1.ConstDeclCharASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constDeclCharAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstDeclCharAST([NotNull] Parser1.ConstDeclCharASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>constDeclNumAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstDeclNumAST([NotNull] Parser1.ConstDeclNumASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constDeclNumAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstDeclNumAST([NotNull] Parser1.ConstDeclNumASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>programAST</c>
	/// labeled alternative in <see cref="Parser1.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramAST([NotNull] Parser1.ProgramASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>programAST</c>
	/// labeled alternative in <see cref="Parser1.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramAST([NotNull] Parser1.ProgramASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>methodDeclAST</c>
	/// labeled alternative in <see cref="Parser1.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclAST([NotNull] Parser1.MethodDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>methodDeclAST</c>
	/// labeled alternative in <see cref="Parser1.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclAST([NotNull] Parser1.MethodDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>desig2AST</c>
	/// labeled alternative in <see cref="Parser1.desig2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesig2AST([NotNull] Parser1.Desig2ASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>desig2AST</c>
	/// labeled alternative in <see cref="Parser1.desig2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesig2AST([NotNull] Parser1.Desig2ASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typeAST</c>
	/// labeled alternative in <see cref="Parser1.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAST([NotNull] Parser1.TypeASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeAST</c>
	/// labeled alternative in <see cref="Parser1.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAST([NotNull] Parser1.TypeASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>relopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelopAST([NotNull] Parser1.RelopASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>relopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelopAST([NotNull] Parser1.RelopASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>formParsAST</c>
	/// labeled alternative in <see cref="Parser1.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormParsAST([NotNull] Parser1.FormParsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>formParsAST</c>
	/// labeled alternative in <see cref="Parser1.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormParsAST([NotNull] Parser1.FormParsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>actParsAST</c>
	/// labeled alternative in <see cref="Parser1.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActParsAST([NotNull] Parser1.ActParsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>actParsAST</c>
	/// labeled alternative in <see cref="Parser1.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActParsAST([NotNull] Parser1.ActParsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>designatorAST</c>
	/// labeled alternative in <see cref="Parser1.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignatorAST([NotNull] Parser1.DesignatorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorAST</c>
	/// labeled alternative in <see cref="Parser1.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignatorAST([NotNull] Parser1.DesignatorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>condFactAST</c>
	/// labeled alternative in <see cref="Parser1.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondFactAST([NotNull] Parser1.CondFactASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condFactAST</c>
	/// labeled alternative in <see cref="Parser1.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondFactAST([NotNull] Parser1.CondFactASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>conditionAST</c>
	/// labeled alternative in <see cref="Parser1.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionAST([NotNull] Parser1.ConditionASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionAST</c>
	/// labeled alternative in <see cref="Parser1.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionAST([NotNull] Parser1.ConditionASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>mulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulopAST([NotNull] Parser1.MulopASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>mulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulopAST([NotNull] Parser1.MulopASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>forstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForstaAST([NotNull] Parser1.ForstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForstaAST([NotNull] Parser1.ForstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>designatorstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignatorstaAST([NotNull] Parser1.DesignatorstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignatorstaAST([NotNull] Parser1.DesignatorstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>whilestaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhilestaAST([NotNull] Parser1.WhilestaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>whilestaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhilestaAST([NotNull] Parser1.WhilestaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>returnstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnstaAST([NotNull] Parser1.ReturnstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>returnstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnstaAST([NotNull] Parser1.ReturnstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>pycomastaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPycomastaAST([NotNull] Parser1.PycomastaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pycomastaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPycomastaAST([NotNull] Parser1.PycomastaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>foreachstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachstaAST([NotNull] Parser1.ForeachstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachstaAST([NotNull] Parser1.ForeachstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>breakAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakAST([NotNull] Parser1.BreakASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>breakAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakAST([NotNull] Parser1.BreakASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>readstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadstaAST([NotNull] Parser1.ReadstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>readstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadstaAST([NotNull] Parser1.ReadstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ifstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfstaAST([NotNull] Parser1.IfstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfstaAST([NotNull] Parser1.IfstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>writestaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWritestaAST([NotNull] Parser1.WritestaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>writestaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWritestaAST([NotNull] Parser1.WritestaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>blockstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockstaAST([NotNull] Parser1.BlockstaASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>blockstaAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockstaAST([NotNull] Parser1.BlockstaASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>blockAST</c>
	/// labeled alternative in <see cref="Parser1.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockAST([NotNull] Parser1.BlockASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>blockAST</c>
	/// labeled alternative in <see cref="Parser1.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockAST([NotNull] Parser1.BlockASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>exprAST</c>
	/// labeled alternative in <see cref="Parser1.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAST([NotNull] Parser1.ExprASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprAST</c>
	/// labeled alternative in <see cref="Parser1.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAST([NotNull] Parser1.ExprASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>termAST</c>
	/// labeled alternative in <see cref="Parser1.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermAST([NotNull] Parser1.TermASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>termAST</c>
	/// labeled alternative in <see cref="Parser1.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermAST([NotNull] Parser1.TermASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>truefalseFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTruefalseFactorAST([NotNull] Parser1.TruefalseFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>truefalseFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTruefalseFactorAST([NotNull] Parser1.TruefalseFactorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>stringAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringAST([NotNull] Parser1.StringASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringAST([NotNull] Parser1.StringASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>designatorfactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignatorfactorAST([NotNull] Parser1.DesignatorfactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorfactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignatorfactorAST([NotNull] Parser1.DesignatorfactorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>numFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumFactorAST([NotNull] Parser1.NumFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumFactorAST([NotNull] Parser1.NumFactorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>newidFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewidFactorAST([NotNull] Parser1.NewidFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>newidFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewidFactorAST([NotNull] Parser1.NewidFactorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>charconstFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharconstFactorAST([NotNull] Parser1.CharconstFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>charconstFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharconstFactorAST([NotNull] Parser1.CharconstFactorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>pizqExpreFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPizqExpreFactorAST([NotNull] Parser1.PizqExpreFactorASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pizqExpreFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPizqExpreFactorAST([NotNull] Parser1.PizqExpreFactorASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>varDeclAST</c>
	/// labeled alternative in <see cref="Parser1.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclAST([NotNull] Parser1.VarDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varDeclAST</c>
	/// labeled alternative in <see cref="Parser1.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclAST([NotNull] Parser1.VarDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] Parser1.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] Parser1.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecla([NotNull] Parser1.DeclaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.decla"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecla([NotNull] Parser1.DeclaContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstDecl([NotNull] Parser1.ConstDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstDecl([NotNull] Parser1.ConstDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] Parser1.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] Parser1.VarDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] Parser1.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] Parser1.ClassDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDecl([NotNull] Parser1.MethodDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDecl([NotNull] Parser1.MethodDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormPars([NotNull] Parser1.FormParsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormPars([NotNull] Parser1.FormParsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] Parser1.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] Parser1.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] Parser1.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] Parser1.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] Parser1.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] Parser1.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActPars([NotNull] Parser1.ActParsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActPars([NotNull] Parser1.ActParsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] Parser1.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] Parser1.ConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondTerm([NotNull] Parser1.CondTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondTerm([NotNull] Parser1.CondTermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondFact([NotNull] Parser1.CondFactContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondFact([NotNull] Parser1.CondFactContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] Parser1.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] Parser1.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] Parser1.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] Parser1.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] Parser1.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] Parser1.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignator([NotNull] Parser1.DesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignator([NotNull] Parser1.DesignatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.desig2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesig2([NotNull] Parser1.Desig2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.desig2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesig2([NotNull] Parser1.Desig2Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] Parser1.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] Parser1.RelopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddop([NotNull] Parser1.AddopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddop([NotNull] Parser1.AddopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulop([NotNull] Parser1.MulopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulop([NotNull] Parser1.MulopContext context);
}
} // namespace PrograCompi
